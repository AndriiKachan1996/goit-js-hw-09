{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,wBACjCI,SAAUL,SAASC,cAAc,yBAG7BC,QAAEI,EAAOH,OAAEI,EAAMH,SAAEI,EAAQH,SAAEI,EAAQV,OAAEW,GAAWZ,EAqCxD,SAASa,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA5CbJ,EAASY,iBAAiB,SAG1B,SAAsBC,GACpBA,EAAEC,iBAIJ,WACE,IAAIC,EAAQlB,EAAQmB,MAChBC,EAAOnB,EAAOkB,MACdE,EAASnB,EAASiB,MAEtBD,GAASA,EAET,IAAK,IAAII,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAElCjB,EADeiB,EAAI,EACKJ,GACrBK,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAAlC,GAASmC,OAAOC,QACd,uBAAqBpB,QAAiBC,MAAU,IAGnDoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAAlC,GAASmC,OAAOG,QACd,sBAAoBtB,QAAeC,MAAU,IAGhDsB,SAAQ,KACPzB,EAAO0B,OAAO,IAElBZ,GAAgBa,SAASX,E,EA1B3BY,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name = delay]'),\n  stepEl: document.querySelector('input[name = step]'),\n  amountEl: document.querySelector('input[name = amount]'),\n  submitEl: document.querySelector('button[type=submit]'),\n};\n\nconst { delayEl, stepEl, amountEl, submitEl, formEl } = refs;\n\nsubmitEl.addEventListener('click', onFormSubmit);\n\n// =================================================================\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  generationAndDemonstrationPromises();\n}\n\nfunction generationAndDemonstrationPromises() {\n  let delay = delayEl.value;\n  let step = stepEl.value;\n  let amount = amountEl.value;\n\n  delay = +delay;\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => {\n        formEl.reset();\n      });\n    delay = delay + parseInt(step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","submitEl","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$submitEl","$47d4ff9957288465$var$formEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","finally","reset","parseInt","$47d4ff9957288465$var$generationAndDemonstrationPromises"],"version":3,"file":"03-promises.aed83814.js.map"}